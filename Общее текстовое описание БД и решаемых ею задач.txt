Для курсового проекта выбрал создать БД на примере интернет-магазина Amazon, так как он самый известный и крупный.

В своём варианте БД Amazon сделал основные таблицы.

Таблицы users и personal_data для хранения данных после регистрации и личных данных человека:

drop table if exists users;
create table users (
  id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(100) UNIQUE NOT NULL,
  phone BIGINT UNSIGNED UNIQUE NOT NULL,
  password_hash VARCHAR(85) NOT NULL,
  created_at DATETIME DEFAULT NOW(),
  updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);


drop table if exists personal_data;
create table personal_data (
  id SERIAL,
  user_id BIGINT UNSIGNED NOT NULL UNIQUE,
  firstname VARCHAR(30) DEFAULT NULL,
  lastname VARCHAR(70) DEFAULT NULL,
  birthday DATE DEFAULT NULL,
  gender CHAR(20) DEFAULT NULL,
  
  INDEX firstname_lastname_idx(lastname, firstname)
  
);

Таблицы categories и brands созданы для того, чтоб хранить в себе информацию о категориях и брендах, тем самым избавиться от лишнего объёма таблицы products, подставляя вместо названий категорий и брендов идентификаторы:

drop table if exists categories;
create table categories (
  id SERIAL,
  name VARCHAR(255) NOT NULL
);

drop table if exists brands;
create table brands (
  id SERIAL,
  name VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  site VARCHAR(255) DEFAULT NULL
);


Таблицы products и recomended_products, первая содержит в себе всю необходимую информацию о продукте, а вторая в свою очередь ограниченную информацию, так как эта таблица предназначена для отображения товара, а в случае если этот товар привлёк внимание пользователя, то он нажмёт и откроет полное описание продукта уже из таблицы products:

drop table if exists products;
create table products (
  id SERIAL,
  category_id BIGINT UNSIGNED NOT NULL,
  brand_id BIGINT UNSIGNED NOT NULL,
  name VARCHAR(255) NOT NULL,
  specifications TEXT NOT NULL,
  description TEXT NOT NULL,
  reviews TEXT DEFAULT NULL,
  price DECIMAL(2) UNSIGNED,
  
  foreign key (category_id) references categories(id),
  foreign key (brand_id) references brands(id),
  
  INDEX name_price_idx(name, price)
);

drop table if exists recomended_products;
create table recomended_products (
  id SERIAL,
  user_id BIGINT UNSIGNED NOT NULL,
  product_id BIGINT UNSIGNED NOT NULL,
  product_name VARCHAR(255) NOT NULL,
  
  foreign key (user_id) REFERENCES users(id),
  foreign key (product_id) references products(id),
  foreign key (product_name) references products(name)
);